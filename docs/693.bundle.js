"use strict";(self.webpackChunksquoosh=self.webpackChunksquoosh||[]).push([[693],{693:(e,n,t)=>{let a;t.r(n),t.d(n,{default:()=>l,optimise:()=>f});let s=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});s.decode();let r=null;function i(){return null!==r&&r.buffer===a.memory.buffer||(r=new Uint8Array(a.memory.buffer)),r}let o=0,c=null;function u(){return null!==c&&c.buffer===a.memory.buffer||(c=new Int32Array(a.memory.buffer)),c}function f(e,n,t){try{const m=a.__wbindgen_add_to_stack_pointer(-16);var s=function(e,n){const t=n(1*e.length);return i().set(e,t/1),o=e.length,t}(e,a.__wbindgen_malloc),r=o;a.optimise(m,s,r,n,t);var c=u()[m/4+0],f=u()[m/4+1],l=(b=c,w=f,i().subarray(b/1,b/1+w)).slice();return a.__wbindgen_free(c,1*f),l}finally{a.__wbindgen_add_to_stack_pointer(16)}var b,w}const l=async function e(n){void 0===n&&(n=new URL(t(706),t.b));const r={wbg:{}};r.wbg.__wbindgen_throw=function(e,n){throw new Error((t=e,a=n,s.decode(i().subarray(t,t+a))));var t,a},("string"==typeof n||"function"==typeof Request&&n instanceof Request||"function"==typeof URL&&n instanceof URL)&&(n=fetch(n));const{instance:o,module:c}=await async function(e,n){if("function"==typeof Response&&e instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,n)}catch(n){if("application/wasm"==e.headers.get("Content-Type"))throw n;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",n)}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}(await n,r);return a=o.exports,e.__wbindgen_wasm_module=c,a}},706:(e,n,t)=>{e.exports=t.p+"c96242667dc8e630897a.wasm"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,